// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pweb_kilme_.Models.dbModels;

#nullable disable

namespace Pweb_kilme_.Migrations
{
    [DbContext(typeof(PwebdbContext))]
    partial class PwebdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pweb_kilme_.Models.dbModels.ApplicationRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Pweb_kilme_.Models.dbModels.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Pweb_kilme_.Models.dbModels.Datosreservacion", b =>
                {
                    b.Property<int>("IdReservacion")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdQuinta")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("NumInvitados")
                        .HasColumnType("int");

                    b.HasKey("IdReservacion")
                        .HasName("PK_datosreservacion_IdReservacion");

                    b.HasIndex(new[] { "IdEstado" }, "IdEstado");

                    b.HasIndex(new[] { "IdQuinta" }, "IdQuinta");

                    b.HasIndex(new[] { "IdUsuario" }, "IdUsuario");

                    b.ToTable("datosreservacion", "pwebdb");
                });

            modelBuilder.Entity("Pweb_kilme_.Models.dbModels.Estado", b =>
                {
                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("Estado1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("estado");

                    b.HasKey("IdEstado")
                        .HasName("PK_estado_IdEstado");

                    b.ToTable("estado", "pwebdb");
                });

            modelBuilder.Entity("Pweb_kilme_.Models.dbModels.Imgsquintum", b =>
                {
                    b.Property<int>("IdImg")
                        .HasColumnType("int");

                    b.Property<string>("ImgQuinta")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdImg")
                        .HasName("PK_imgsquinta_IdImg");

                    b.ToTable("imgsquinta", "pwebdb");
                });

            modelBuilder.Entity("Pweb_kilme_.Models.dbModels.Quintum", b =>
                {
                    b.Property<int>("IdQuinta")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdImagen")
                        .HasColumnType("int");

                    b.Property<int>("IdRedes")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PrecioPorPersona")
                        .HasColumnType("int");

                    b.HasKey("IdQuinta")
                        .HasName("PK_quinta_IdQuinta");

                    b.HasIndex(new[] { "IdImagen" }, "IdImagen");

                    b.HasIndex(new[] { "IdRedes" }, "IdRedes");

                    b.HasIndex(new[] { "PrecioPorPersona" }, "PrecioReservacion");

                    b.ToTable("quinta", "pwebdb");
                });

            modelBuilder.Entity("Pweb_kilme_.Models.dbModels.Redessociale", b =>
                {
                    b.Property<int>("IdRedes")
                        .HasColumnType("int");

                    b.Property<string>("RedSoc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdRedes")
                        .HasName("PK_redessociales_IdRedes");

                    b.ToTable("redessociales", "pwebdb");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Pweb_kilme_.Models.dbModels.ApplicationRol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Pweb_kilme_.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Pweb_kilme_.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Pweb_kilme_.Models.dbModels.ApplicationRol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pweb_kilme_.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Pweb_kilme_.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pweb_kilme_.Models.dbModels.Datosreservacion", b =>
                {
                    b.HasOne("Pweb_kilme_.Models.dbModels.Estado", "IdEstadoNavigation")
                        .WithMany("Datosreservacions")
                        .HasForeignKey("IdEstado")
                        .IsRequired()
                        .HasConstraintName("datosreservacion$datosreservacion_ibfk_3");

                    b.HasOne("Pweb_kilme_.Models.dbModels.Quintum", "IdQuintaNavigation")
                        .WithMany("Datosreservacions")
                        .HasForeignKey("IdQuinta")
                        .IsRequired()
                        .HasConstraintName("datosreservacion$datosreservacion_ibfk_4");

                    b.HasOne("Pweb_kilme_.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Datosreservacions")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("datosreservacion$datosreservacion_ibfk_2");

                    b.Navigation("IdEstadoNavigation");

                    b.Navigation("IdQuintaNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Pweb_kilme_.Models.dbModels.Quintum", b =>
                {
                    b.HasOne("Pweb_kilme_.Models.dbModels.Imgsquintum", "IdImagenNavigation")
                        .WithMany("Quinta")
                        .HasForeignKey("IdImagen")
                        .IsRequired()
                        .HasConstraintName("quinta$quinta_ibfk_1");

                    b.HasOne("Pweb_kilme_.Models.dbModels.Redessociale", "IdRedesNavigation")
                        .WithMany("Quinta")
                        .HasForeignKey("IdRedes")
                        .IsRequired()
                        .HasConstraintName("quinta$quinta_ibfk_2");

                    b.Navigation("IdImagenNavigation");

                    b.Navigation("IdRedesNavigation");
                });

            modelBuilder.Entity("Pweb_kilme_.Models.dbModels.ApplicationUser", b =>
                {
                    b.Navigation("Datosreservacions");
                });

            modelBuilder.Entity("Pweb_kilme_.Models.dbModels.Estado", b =>
                {
                    b.Navigation("Datosreservacions");
                });

            modelBuilder.Entity("Pweb_kilme_.Models.dbModels.Imgsquintum", b =>
                {
                    b.Navigation("Quinta");
                });

            modelBuilder.Entity("Pweb_kilme_.Models.dbModels.Quintum", b =>
                {
                    b.Navigation("Datosreservacions");
                });

            modelBuilder.Entity("Pweb_kilme_.Models.dbModels.Redessociale", b =>
                {
                    b.Navigation("Quinta");
                });
#pragma warning restore 612, 618
        }
    }
}
